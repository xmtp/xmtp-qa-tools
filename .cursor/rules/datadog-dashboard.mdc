# Main dashboard

This is the main dashboard we look at every day to understand how XMTP is performing. Think of it as our mission control - it shows us everything we need to know about network health, delivery rates, and whether our users are having a good experience.

## Dashboard overview

- **URL**: [Datadog XMTP Dashboard](https://p.datadoghq.com/sb/a5c739de-7e2c-11ec-bc0b-da7ad0900002-efaf10f4988297b8a8581128f2867a3d)
- **What you'll see**: XMTP SDK Performance - Metrics for SDK operations (DNS, TLS, Server Processing). See [monitoring system](./monitoring.md#monitoring-system) for related alerts.

The dashboard is organized into sections covering performance metrics, infrastructure health, test execution, and regional monitoring.

## Performance metrics

### Delivery rate widget

**What it shows**: How many messages are actually making it to their destination across all our environments and regions.

```json
{
  "title": "Delivery Rate (%)",
  "query": "avg:xmtp.sdk.delivery{$env,$region,$test,$sdk,$members}"
}
```

**Color coding**:

- Green (≥99%): Excellent performance, meeting SLO targets
- Yellow (≥95%): Acceptable performance, monitor closely
- Red (<95%): Below SLO threshold, immediate attention required

### Order rate widget

**Purpose**: Measures message sequence integrity across different SDK bindings.

```bash
Query: avg:xmtp.sdk.order{$env,$region,$test,$sdk,$members}
```

### Average response time widget

**Purpose**: Response time measurements across environments.

```bash
Query: avg:xmtp.sdk.response{$env,$region, $sdk}
```

**Color coding**:

- Green (≤3000ms): Excellent performance
- Yellow (≤5000ms): Acceptable performance
- Red (>5000ms): Poor performance

### SLO list widget

**Purpose**: Displays service level objectives created by the team.

```bash
Query: slo_creator:"Fabrizio Guespe"
```

See [Monitoring system](./monitoring.md) for configuration.

### Time range controls

- **Default**: Last 4 hours
- **Recommended**:
  - **Real-time monitoring**: Last 1 hour with auto-refresh (30s)
  - **Trend analysis**: Last 24 hours
  - **Weekly reviews**: Last 7 days

## Operations monitoring

### Fail lines widget

Displays recent test failures and error logs:

```json
{
  "title": "Fail lines",
  "query": "@service:xmtp-qa-tools",
  "columns": ["status_line", "timestamp", "env", "region", "fail_lines", "test"]
}
```

### Streams widget

Shows delivery and order rates over time:

```json
{
  "title": "Streams",
  "queries": [
    "avg:xmtp.sdk.delivery{$env,$test,$sdk,$region}",
    "avg:xmtp.sdk.order{$env,$region,$test,$sdk}"
  ]
}
```

### Operations performance by network widget

Network-level operation performance:

```bash
Query: avg:xmtp.sdk.duration{$env,$region,$sdk,test:m_performance, $operation, metric_subtype:core} by {operation}
```

## Performance analysis

### Network performance widget

Network-level timing by phase:

```bash
{
  "title": "Network Performance",
  "query": "avg:xmtp.sdk.duration{metric_type:network,$env,$region,$test,$sdk,$members} by {network_phase}"
}
```

### Group operation performance widgets

Multiple widgets tracking group-related operations:

**newGroup performance over time (by members)**:

```bash
Query: avg:xmtp.sdk.duration{metric_subtype:group,$env,$members,test:m_performance, $operation, $region} by {members}
```

**newGroup performance over time (by operation)**:

```bash
Query: avg:xmtp.sdk.duration{metric_subtype:group,$env,$members,test:m_performance, $operation, $region} by {operation}
```

**Group performance over time**:

```bash
Query: avg:xmtp.sdk.duration{metric_subtype:group,$env,$region,$members, test:m_performance, operation:newgroup} by {members,operation}
```

### Operation performance table

Comprehensive operation timing table:

```bash
Query: avg:xmtp.sdk.duration{$env,$region,$test,$sdk,$members} by {operation,test,members,region,env}
```

## Regional monitoring

### Network performance table

Compares network performance between production and dev environments by region:

```json
{
  "title": "Network performance",
  "queries": [
    "avg:xmtp.sdk.duration{metric_type:network,env:production,$region,$test,$sdk,$members} by {region,network_phase}",
    "avg:xmtp.sdk.duration{metric_type:network,env:dev,$region,$test,$sdk,$members} by {region,network_phase}"
  ]
}
```

### Performance by region geomap

Geographic visualization of server call performance:

```json
{
  "title": "Performance by region",
  "query": "avg:xmtp.sdk.duration{metric_type:network,network_phase:server_call, $sdk, $env} by {country_iso_code}",
  "visualization": "geomap"
}
```

## Monitors

The dashboard is complemented by several monitors that alert on various conditions:

### Test execution monitoring

- **Test failed**: Alerts when test suites fail across environments
- **Duration not logging**: Monitors when performance metrics stop being collected

### Network performance monitoring

- **Network slow requests**: Alerts on network performance degradation across environments

These monitors provide proactive alerting to complement the visual monitoring provided by the dashboard widgets.
