name: Self Test XMTP QA Tools

on:
  schedule:
    - cron: "25 */4 * * *" # every 4 hours at 25 minutes past
  workflow_dispatch:

jobs:
  run-self-test:
    runs-on: ubuntu-latest

    env:
      XMTP_ENV: ${{ vars.XMTP_ENV || 'dev' }}
      LOGGING_LEVEL: "error"
      REGION: ${{ vars.REGION }}
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      SLACK_CHANNEL: ${{ secrets.SLACK_CHANNEL }}
      DATADOG_API_KEY: ${{ secrets.DATADOG_API_KEY }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clone XMTP QA Tools repo
        run: |
          git clone --depth=1 https://github.com/xmtp/xmtp-qa-tools.git qa-tools-test
          cd qa-tools-test

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: |
          cd qa-tools-test
          yarn install

      - name: Run DM tests
        run: |
          cd qa-tools-test
          timeout 300s yarn dms

      - name: Cleanup and upload artifacts
        if: always()
        uses: ./.github/actions/xmtp-test-cleanup
        with:
          test-name: ${{ matrix.test }}
          env: ${{ matrix.env }}

  run-agent:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Clone XMTP agent examples
        run: |
          git clone https://github.com/ephemeraHQ/xmtp-agent-examples.git
          cd xmtp-agent-examples

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          # Disable built-in cache since we're working with external repo

      - name: Install dependencies
        run: |
          cd xmtp-agent-examples
          yarn install

      - name: Generate keys
        run: |
          cd xmtp-agent-examples
          yarn gen:keys
          echo "XMTP_ENV=${{ vars.XMTP_ENV }}" >> .env

      - name: Create .env file
        run: echo "XMTP_ENV=local" > .env

      - name: Run agent
        run: |
          cd xmtp-agent-examples
          timeout 20s yarn dev | tee output.log
          if grep -q "Waiting for messages..." output.log; then
            echo "Success: Agent started successfully and is waiting for messages"
            exit 0
          else
            echo "Error: Agent did not reach 'Waiting for messages...' state"
            exit 1
          fi

  package-compatibility:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: [20, 21, 22, 23]
        package-manager: [npm, yarn, yarn1, pnpm, bun]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          repository: xmtp/xmtp-qa-tools
          path: xmtp-qa-tools

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install pnpm
        if: matrix.package-manager == 'pnpm'
        uses: pnpm/action-setup@v3
        with:
          version: 10.7.0

      - name: Install Bun
        if: matrix.package-manager == 'bun'
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install Yarn 1
        if: matrix.package-manager == 'yarn1'
        run: |
          npm install -g yarn@1.22.19
          yarn --version

      - name: Navigate to gm-bot directory
        run: cd xmtp-qa-tools/bots/gm-bot

      - name: Clean previous installations
        run: |
          cd xmtp-qa-tools/bots/gm-bot
          rm -rf node_modules
          rm -rf dist
          rm -rf .yarn
          rm -f package-lock.json
          rm -f yarn.lock
          rm -f pnpm-lock.yaml
          rm -f bun.lockb

      - name: Install dependencies with npm
        if: matrix.package-manager == 'npm'
        run: |
          cd xmtp-qa-tools/bots/gm-bot
          npm install

      - name: Install dependencies with yarn
        if: matrix.package-manager == 'yarn'
        run: |
          cd xmtp-qa-tools/bots/gm-bot
          touch yarn.lock
          yarn install --no-immutable

      - name: Install dependencies with yarn 1
        if: matrix.package-manager == 'yarn1'
        run: |
          cd xmtp-qa-tools/bots/gm-bot
          touch yarn.lock
          yarn install --no-immutable

      - name: Install dependencies with pnpm
        if: matrix.package-manager == 'pnpm'
        run: |
          cd xmtp-qa-tools/bots/gm-bot
          pnpm install
          pnpm add @xmtp/node-bindings

      - name: Install dependencies with bun
        if: matrix.package-manager == 'bun'
        run: |
          cd xmtp-qa-tools/bots/gm-bot
          bun install

      - name: Build project
        run: |
          cd xmtp-qa-tools/bots/gm-bot
          if [ "${{ matrix.package-manager }}" = "yarn1" ]; then
            yarn run build
                    else
            ${{ matrix.package-manager }} run build
          fi
