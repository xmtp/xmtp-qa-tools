name: Regression testing

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths:
      - "package.json"
      - "version-management/client-versions.ts"
  workflow_dispatch:

jobs:
  detect-version-bump:
    runs-on: ubuntu-latest
    outputs:
      version_changed: ${{ steps.check-version.outputs.version_changed }}
      new_version: ${{ steps.extract-version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Check for version changes
        id: check-version
        run: |
          git diff HEAD^ HEAD -- package.json lerna.json */package.json | grep -q '"version"' && \
          echo "version_changed=true" >> $GITHUB_OUTPUT || \
          echo "version_changed=false" >> $GITHUB_OUTPUT

      - name: Extract new version
        id: extract-version
        if: steps.check-version.outputs.version_changed == 'true'
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  validate-regression:
    timeout-minutes: 30
    runs-on: ubuntu-latest
    env:
      SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
      REGION: ${{ vars.REGION }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".node-version"

      - name: Enable Corepack
        run: corepack enable

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            node_modules
            .yarn/cache
          key: deps-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            deps-

            - name: Show current active version
        run: |
          node -e "
            const { getActiveVersion } = require('./version-management/client-versions.ts');
            console.log('Current active SDK version:', getActiveVersion().nodeSDK);
          "

      - name: Run script version
        run: yarn versions

      - name: Run regression tests
        run: yarn regression

      - name: Send Slack notification on failure
        if: failure() || cancelled()
        uses: ./.github/actions/slack-notification
        with:
          workflow-name: "Regression testing"
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
